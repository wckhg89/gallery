buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'java'
}

subprojects() {
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'groovy'

    group = 'com.guppy'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
}

project(':gallery-web') {
    apply plugin: "com.moowork.node"

    ext {
        set('snippetsDir', file("build/generated-snippets"))
    }

    node {
        npmVersion = '6.9.0'
        version = '10.16.3'
        download = true
    }

    task moduleInstall(type: NpmTask) {
        println file("$project.projectDir/src/front")
        workingDir file("$project.projectDir/src/front")
        args = ['install']
    }

    task frontBuild(type: NpmTask, dependsOn: 'moduleInstall') {
        println file("$project.projectDir/src/front")
        workingDir file("$project.projectDir/src/front")
        args = ['run', 'build']
    }

    processResources.dependsOn 'frontBuild'

    dependencies {
        compile project(':gallery-domain')

        implementation 'org.springframework.boot:spring-boot-starter-mustache'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation('org.apache.httpcomponents:httpasyncclient')

        compile('org.springframework.restdocs:spring-restdocs-restassured')
        compileOnly 'org.projectlombok:lombok'
        compileOnly("org.springframework.boot:spring-boot-configuration-processor")


        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit' // exclude junit4
        }

        // add junit5
        testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        testCompile('org.mockito:mockito-junit-jupiter:2.23.4')

        testCompile('io.rest-assured:spring-mock-mvc')
        testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
        testCompile('org.springframework.restdocs:spring-restdocs-restassured')
    }
}

project('gallery-admin') {

}

project('gallery-domain') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-mongodb')
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9.3'
        compileOnly 'org.projectlombok:lombok'
        compileOnly("org.springframework.boot:spring-boot-configuration-processor")

        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit' // exclude junit4
        }

        // add junit5
        testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        testCompile('org.mockito:mockito-junit-jupiter:2.23.4')

        testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo"

    }

    compileJava.dependsOn(processResources)
}
